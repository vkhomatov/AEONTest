Задача:

Сделать приложение с возможностью авторизации пользователя и вывода списка его платежей после успешной авторизации. Сделанный проект надо выгрузить в репозиторий на Github. Оценивается как выполнение указанных требований, так и качество проработки отдельных деталей.

Требования к функционалу:
- если логин/пароль неправильные - выводим ошибку
- надо предусмотреть возможность logout'а
- корректный вывод списка платежей при ошибочных данных (пропущенные поля, несоответствие типу)

Требования к коду:
- язык программирования Swift
- простая архитектура и логика

API:

Базовый URL http://82.202.204.94/api/, в заголовках надо передавать app-key=12345 и v=1

POST /login - логин, передаем параметры в form-data (login=demo, password=12345), при корректном запросе в ответ приходит токен.

GET /payments - список платежей, для запроса передаем ранее полученный токен в формате token=...



Описание работы интерфейса:
Первый контроллер содержит два поля и кнопку логин, ошибки авторизации и сетевые ошибки выводятся или в в дополнительном вью или же в этом же контроллере или в выдвигающемся вью. Во время процесса авторизации выводится индикатор загрузки.
Если авторизация прошла успешно, открывается новый контроллер поверх этого с таблицей, в которой выводися список платежей. В заголовке контроллера есть кнопка - выход, которая разлогинивает соединение и закрывает контроллер с таблицей.


Модули:
NetworkService - осуществляет запросы на сервер и получает данные от сервера.
NetworkMonitor - показывает статус соединения с интернет.
LoadIndicator - индикатор загрузки - возможно просто Autorization...

Структуры:
Структура запроса
Синглетон с токеном
Структура с платежами

Хелперы:
Проверка полученных данных на соответсвие - возможно просто в структуре платежа сделать поля опциональными



Алгоритм:
показать первый контроллер с двумя полями ввода и кнопкой "Login"
проверить соединение с интернетом, при отсутсвие соединения выдвиуть вью с информацией
при появлении соединения заменить информацию во вью на другую изменить цвет вью и задвинуть его 
составить запрос из основного адреса, заголовка и body
послать запрос и получить токен, авторизироваться с токеном
при неуспешной показать выдвижное вью с ошибкой
при успешной авторизации перейти на второй контроллер с таблицей
получить JSON
раскодировать JSON в объект
запустить обработчик объекта на наличие ошибок если нужно 
вывести список в таблицу
при нажатие на кнопку выход - перейти в первый контроллер(закрыть контроллер таблицы)
удалить токен, что приведет к разлогированию

Кодирование
распечатать JSON
описать структуру Платеж
описать enum  c ошибками
написать Хелпер по обработке ошибок в структуре платежа - возможно jsonserialisation или просто опциональные поля объекта Платеж



